Unsolved question:
1. 	Set-up:
	- Deployed proxy smart contract attached to WanderTokenPolV1 ($pWander)
	- Created a submit request to mint 1,000,000 $pWANDER to Account 1
	- Account 2 and 3 confirm the request, Account 1 execute the request
	- Account 1 has 1,000,000 $pWANDER
	- Account 2 regular mints 10,000 $pWANDER
	- In Etherscan:
		-> TransparentUpgradableProxy has a token tracker of WANDER (pWANDER)
		-> Address in Rinkeby: 0x8A4563E29B017117e021fA009E7F722eE3135828
	- Balance of WanderTokenPolV1 is 1,010,000 tokens (Displayed in Etherscan)

	- Upgrade the proxy smart contract with WanderTokenPolV2 ($pWANDERV2)
	- WanderTokenPolV2 is deployed and attached to the proxy
	- Able to maintain the previous WanderTokenPolV1 data and carried on to the admin console
		-> Was able to see request 0 in Admin Console
		-> Can see the balance of Account 1 is 1,000,000 and Account 2 is 10,000
	- Create a new request to mint 1,000,000 $pWANDERV2 to Account 2
	- Admins confirm the request and execute the request, now Account 2 has an additional 1,000,000 tokens
	- Balance of WanderTokenPolV2 contract is 0, whilst the balance of WanderTokenPolV1 contract is now 2,010,000 tokens

	Question:
	a) Is this a normal thing? Where even the proxy has upgraded the token, the balance is still connected to the first deployed token.
	  Hence, user needs to go back to the WANDER token's first version's page in Etherscan to see the total balance of WANDER tokens.
		-> Functionality wise, the proxy is now implementing WanderTokenPolV2's functions (can execute getTotalAdmins(), where it's 
		   available in WanderTokenPolV2 smart contract, but not in WanderTokenPolV1 smart cotnract).
	b) Furthermore, if the answer to question a) is yes, that means changing the token's name in later version of the token smart contract
	   serves no purpose, as the token tracker of the proxy will always stick to the first version of the token smart contract.